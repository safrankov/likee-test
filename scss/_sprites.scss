// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$icon-menu-hover-name: 'icon-menu-hover';
$icon-menu-hover-x: 122px;
$icon-menu-hover-y: 68px;
$icon-menu-hover-offset-x: -122px;
$icon-menu-hover-offset-y: -68px;
$icon-menu-hover-width: 31px;
$icon-menu-hover-height: 27px;
$icon-menu-hover-total-width: 156px;
$icon-menu-hover-total-height: 125px;
$icon-menu-hover-image: '/img/sprite.png';
$icon-menu-hover: (122px, 68px, -122px, -68px, 31px, 27px, 156px, 125px, '/img/sprite.png', 'icon-menu-hover', );
$icon-menu-name: 'icon-menu';
$icon-menu-x: 0px;
$icon-menu-y: 98px;
$icon-menu-offset-x: 0px;
$icon-menu-offset-y: -98px;
$icon-menu-width: 31px;
$icon-menu-height: 27px;
$icon-menu-total-width: 156px;
$icon-menu-total-height: 125px;
$icon-menu-image: '/img/sprite.png';
$icon-menu: (0px, 98px, 0px, -98px, 31px, 27px, 156px, 125px, '/img/sprite.png', 'icon-menu', );
$icon-search-hover-name: 'icon-search-hover';
$icon-search-hover-x: 122px;
$icon-search-hover-y: 0px;
$icon-search-hover-offset-x: -122px;
$icon-search-hover-offset-y: 0px;
$icon-search-hover-width: 34px;
$icon-search-hover-height: 34px;
$icon-search-hover-total-width: 156px;
$icon-search-hover-total-height: 125px;
$icon-search-hover-image: '/img/sprite.png';
$icon-search-hover: (122px, 0px, -122px, 0px, 34px, 34px, 156px, 125px, '/img/sprite.png', 'icon-search-hover', );
$icon-search-name: 'icon-search';
$icon-search-x: 122px;
$icon-search-y: 34px;
$icon-search-offset-x: -122px;
$icon-search-offset-y: -34px;
$icon-search-width: 34px;
$icon-search-height: 34px;
$icon-search-total-width: 156px;
$icon-search-total-height: 125px;
$icon-search-image: '/img/sprite.png';
$icon-search: (122px, 34px, -122px, -34px, 34px, 34px, 156px, 125px, '/img/sprite.png', 'icon-search', );
$icon-slider-prev-name: 'icon-slider-prev';
$icon-slider-prev-x: 0px;
$icon-slider-prev-y: 41px;
$icon-slider-prev-offset-x: 0px;
$icon-slider-prev-offset-y: -41px;
$icon-slider-prev-width: 57px;
$icon-slider-prev-height: 57px;
$icon-slider-prev-total-width: 156px;
$icon-slider-prev-total-height: 125px;
$icon-slider-prev-image: '/img/sprite.png';
$icon-slider-prev: (0px, 41px, 0px, -41px, 57px, 57px, 156px, 125px, '/img/sprite.png', 'icon-slider-prev', );
$icon-time-circle-name: 'icon-time-circle';
$icon-time-circle-x: 94px;
$icon-time-circle-y: 41px;
$icon-time-circle-offset-x: -94px;
$icon-time-circle-offset-y: -41px;
$icon-time-circle-width: 7px;
$icon-time-circle-height: 7px;
$icon-time-circle-total-width: 156px;
$icon-time-circle-total-height: 125px;
$icon-time-circle-image: '/img/sprite.png';
$icon-time-circle: (94px, 41px, -94px, -41px, 7px, 7px, 156px, 125px, '/img/sprite.png', 'icon-time-circle', );
$icon-userpic-name: 'icon-userpic';
$icon-userpic-x: 57px;
$icon-userpic-y: 41px;
$icon-userpic-offset-x: -57px;
$icon-userpic-offset-y: -41px;
$icon-userpic-width: 37px;
$icon-userpic-height: 37px;
$icon-userpic-total-width: 156px;
$icon-userpic-total-height: 125px;
$icon-userpic-image: '/img/sprite.png';
$icon-userpic: (57px, 41px, -57px, -41px, 37px, 37px, 156px, 125px, '/img/sprite.png', 'icon-userpic', );
$logo-name: 'logo';
$logo-x: 0px;
$logo-y: 0px;
$logo-offset-x: 0px;
$logo-offset-y: 0px;
$logo-width: 122px;
$logo-height: 41px;
$logo-total-width: 156px;
$logo-total-height: 125px;
$logo-image: '/img/sprite.png';
$logo: (0px, 0px, 0px, 0px, 122px, 41px, 156px, 125px, '/img/sprite.png', 'logo', );
$spritesheet-width: 156px;
$spritesheet-height: 125px;
$spritesheet-image: '/img/sprite.png';
$spritesheet-sprites: ($icon-menu-hover, $icon-menu, $icon-search-hover, $icon-search, $icon-slider-prev, $icon-time-circle, $icon-userpic, $logo, );
$spritesheet: (156px, 125px, '/img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
